#!/usr/bin/env bash
set -e

echo "Removing library in 5....."
sleep 1
echo "4...."
sleep 1
echo "3..."
sleep 1
echo "2.."
sleep 1
echo "1."
sleep 1

echo "Removing library..."
rm -rf ../Library/*

echo "Regenerating 'Reviews/Cancer' library..."
mkdir -p ../Library/Reviews/Cancer
./regen_lib.py ./source_data/library.bib ./source_data/review_cancer.csv "../Library/Reviews/Cancer"

echo "Regenerating 'Reviews/Non Cancer' library..."
mkdir -p "../Library/Reviews/Non cancer"
./regen_lib.py ./source_data/library.bib ./source_data/review_noncancer.csv "../Library/Reviews/Non cancer/"

echo "Regenerating 'Articles' library..."
mkdir "../Library/Research Articles"
./regen_lib.py ./source_data/library.bib ./source_data/articles.csv "../Library/Research Articles/"

echo "Removal completed!"

# ------------------------------------------------------------------------------

start="<!-- TopAnchor -->"
end="<!-- BottomAnchor -->"
# Remove previous tables
sed -i "/${start}/,/${end}/{/${start}/!{/${end}/!d}}" ../README.md

# Define categories through arrays
categories=("Research Articles" "Cancer Reviews" "Non-cancer Reviews")
file_names=("articles" "review_cancer" "review_noncancer")
entries=()

# Get numbers
total=0
for i in "${!categories[@]}"; do
	# Use $(wc -l < file.txt) instead of $(wc -l file.txt)
	# to print just the number of lines without file name
	entries+=($(($(wc -l < "./source_data/${file_names[$i]}.csv") - 1)))
	((total+=entries[$i]))
done

# Append text string to README.md, below "## ICT::bib facts" heading
function _send2README {
	echo "$1" | sed -i "/${start}/r /dev/stdin" ../README.md
}

# Append to README.md (building table upside-down)
_send2README
_send2README "| **Total** | **${total}** |"
for ((i=${#categories[@]}-1; i>=0; i--)); do
	_send2README "| ${categories[$i]} | ${entries[$i]} |"
done
_send2README "| -------- |:-------:|"
_send2README "| Category | Entries |"
_send2README

echo "README.md updated!"
